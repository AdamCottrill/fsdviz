# Generated by Django 2.2.24 on 2021-09-13 16:46

from django.db import migrations


colors_list = [
    "#3cb44b",
    "#4363d8",
    "#e6194b",
    "#f58231",
    "#46f0f0",
    "#ffe119",
    "#f032e6",
    "#911eb4",
    "#bcf60c",
    "#fabebe",
    "#008080",
    "#e6beff",
    "#9a6324",
    "#fffac8",
    "#800000",
    "#aaffc3",
    "#808000",
    "#ffd8b1",
    "#000075",
    "#808080",
    "#ffffff",
]

# species are the only elements that had pre-existing colours:
species_list = [
    "LAT",
    "CHS",
    "RBT",
    "BNT",
    "COS",
    "WAE",
    "LTX",
    "ATS",
    "SPE",
    "BKT",
    "SOS",
    "YEP",
    "LAH",
    "BLO",
    "LAS",
    "MUE",
    "SMB",
    "TIM",
    "NOP",
]


def fill_colorfields(apps, schema_editor):

    models = [
        "Agency",
        "Compositefinclip",
        "Finclip",
        "Fishtag",
        "Jurisdiction",
        "Lake",
        "Managementunit",
        "PhysChemMark",
        "StateProvince",
        "Strain",
        "StrainRaw",
    ]

    for model_name in models:
        model = apps.get_model("common", model_name)
        for i, item in enumerate(model.objects.all()):
            x = i % len(colors_list)
            item.color = colors_list[x]
            item.save()

    Species = apps.get_model("common", "Species")
    spc_map = {x.abbrev: x for x in Species.objects.all()}

    for spc, col in zip(species_list, colors_list):
        species = spc_map.get(spc)
        if species:
            species.color = col
            species.save()


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0020_common_colorfields"),
    ]

    operations = [
        migrations.RunPython(fill_colorfields, reverse_code=migrations.RunPython.noop)
    ]
